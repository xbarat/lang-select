Metadata-Version: 2.4
Name: lang-select
Version: 0.1.0
Summary: Tool to extract and select items from language model responses
Home-page: https://github.com/yourusername/lang-select
Author: Your Name
Author-email: Your Name <your.email@example.com>
License: MIT License
        
        Copyright (c) 2023 Your Name
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
Project-URL: Homepage, https://github.com/yourusername/lang-select
Project-URL: Bug Tracker, https://github.com/yourusername/lang-select/issues
Project-URL: Documentation, https://github.com/yourusername/lang-select#readme
Project-URL: Source Code, https://github.com/yourusername/lang-select
Keywords: llm,gpt,cli,selection,interactive
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: rich
Requires-Dist: rich>=12.0.0; extra == "rich"
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.10.0; extra == "dev"
Requires-Dist: mypy>=0.950; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Lang Select

A Python package to extract selectable items from language model responses and present them for interactive selection.

## Installation

```bash
pip install lang-select
```

For enhanced UI, install with Rich:

```bash
pip install lang-select[rich]
```

## Usage

### Command Line

```bash
# Basic usage
lang-select response.txt

# Use specific tool
lang-select response.txt --tool fzf

# Just print extracted items
lang-select response.txt --print-only

# Output JSON for scripting
lang-select response.txt --json

# Read from stdin
cat response.txt | lang-select -
```

### Python API

```python
from lang_select import extract_items, select_item

# Read text from somewhere
with open("response.txt", "r") as f:
    text = f.read()

# Extract selectable items
items = extract_items(text)

# Display for selection
selected = select_item(items, "Choose an option")
if selected:
    print(f"Selected: {selected.content}")

# Or use external tools (fzf, gum, peco)
from lang_select import select_with_external
selected = select_with_external(items, tool="fzf")
```

## Features

- Extracts selectable items from various language model response formats:
  - Numbered lists (1., 1), 1 -, etc.)
  - Bulleted lists (•, *, -, +)
  - Short paragraph items
- Multiple selection interfaces:
  - Built-in terminal UI
  - Rich-enhanced UI (if installed)
  - External tools (fzf, gum, peco)
- Easy integration with other Python code or scripts

## Integration Examples

### Using with LM responses directly

```python
import requests
from lang_select import extract_items, select_item

# Get a language model response
response = requests.post("https://api.example.com/llm", json={"prompt": "List 5 programming languages"})
text = response.json()["text"]

# Extract and select
items = extract_items(text)
selected = select_item(items)
if selected:
    print(f"You selected: {selected.content}")
```

### Integrating with other CLI tools

```python
import subprocess
from lang_select import extract_items, select_with_external

# Run an LM tool that outputs to stdout
result = subprocess.run(["llm-tool", "generate", "list of tasks"], capture_output=True, text=True)
text = result.stdout

# Extract and select with FZF
items = extract_items(text)
selected = select_with_external(items, tool="fzf")
if selected:
    # Use selected item as input to another tool
    subprocess.run(["task-manager", "add", selected.content])
```

## One-liner Examples

Extract numbered items from a file and pipe to fzf:

```bash
grep -E '^\s*[0-9]+[.)\s-]' response.txt | sed -E 's/^\s*[0-9]+[.)\s-]+\s*//' | fzf
```

Extract bullet points from a file and choose with gum:

```bash
grep -E '^\s*[•*\-+]' response.txt | sed -E 's/^\s*[•*\-+]\s+//' | gum choose
```

## License

MIT 
